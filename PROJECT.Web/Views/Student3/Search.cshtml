@model PROJECT.Core.Model.ViewModel.Student2ViewModel
@using PROJECT.Core.Helpers
@{
    ViewBag.Title = "Search";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Search</h2>
<hr />
<div class="panel panel-primary">
    <div class="panel-heading">
        <h3 class="panel-title">Student Search</h3>
    </div>
    <div class="panel-body">

        @using (Html.BeginForm("Search", "Student3", FormMethod.Get))
        {


            <div class="form-inline">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Keyword, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Keyword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Keyword, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    <div class="col-md-offset-1 col-md-11">
                        <button type="submit" class="btn btn-primary">
                            <i class="glyphicon glyphicon-search"></i> Search
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
@if (Model.Student2SearchList.Count() > 0)
{ 
<table class="table table-hover">
    <tr>
        <th>
            Photo
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CourseTitle)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Gender)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CurrentDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CurrentTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>

        <th></th>
    </tr>

    @foreach (var item in Model.Student2SearchList)
    {

        string fullFilePath = string.Empty;
        fullFilePath = (string.IsNullOrEmpty(item.FileName)) ? "holder.js/100x100" : Url.Content(ApplicationConstant.UPLOADED_STUDENT_IMAGE_PATH + item.FileName);
        <tr>
            <td>
                <a href="@Url.Action("Details", "Student2", new { id = item.StudentId })">
                    <img src="@fullFilePath" width="100" height="100" alt="No Image" class="img-thumbnail" />
                </a>

            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CourseTitle)
            </td>
            <td>
                @Enum.GetName(typeof(GenderEnum), item.Gender)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CurrentDate)
            </td>
            <td>
                @(item.CurrentTime.HasValue ? item.CurrentTime.Value.ToString("hh:mm tt") : string.Empty)
            </td>
            <td>
                @if (item.Status == StatusEnum.Active)
                {
                    <span class="glyphicon glyphicon-ok-sign" style="color:#3c763d" aria-hidden="true"></span>

                    <span>Active</span>

                }
                else if (item.Status == StatusEnum.Inactive)
                {
                    <span class="glyphicon glyphicon-remove-sign" style="color:#a94442" aria-hidden="true"></span>
                    <span>Inactive</span>
                }

            </td>

            <td>

                <a style="width:90px" class="btn btn-info " href="@Url.Action("Details","Student2",new { id = item.StudentId })">
                    <span class="glyphicon glyphicon-eye-open" aria-hidden="true"></span>

                    Details
                </a>


            </td>
        </tr>
    }

</table>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
