@model PROJECT.Core.Model.ViewModel.Student2ViewModel
@using PROJECT.Core.Helpers
@{
    ViewBag.Title = "Report";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Report</h2>

<hr />
<div class="panel panel-primary">
    <div class="panel-heading">
        <h3 class="panel-title">Student Report</h3>
    </div>
    <div class="panel-body">


        @using (Html.BeginForm("Report", "Student3", FormMethod.Get))
        {

            <div class="form-inline">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.strFromDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.strFromDate, new { @class = "form-control datepickerurl" })
                        @Html.ValidationMessageFor(model => model.strFromDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.strToDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.strToDate, new { @class = "form-control datepickerurl" })
                        @Html.ValidationMessageFor(model => model.strToDate, "", new { @class = "text-danger" })
                    </div>
                </div>





                <div class="form-group">
                    @Html.LabelFor(model => model.filterId, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.DropDownListFor(model => model.filterId, Model.CourseList, "--- Select ---", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.filterId, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                       
                        <button type="submit" class="btn btn-primary">
                            <i class="glyphicon glyphicon-search"></i> Search
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>


@if (Model.Student2ReportList.Count() > 0)
{
    <div id="printIcon"></div>
        <div id="printThis">
            <div class="text-center"><h1>Student Report</h1></div>


            <table class="table table-hover">

                <thead>
                    <tr>
                        <th>
                            Photo
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CourseTitle)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Gender)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CurrentDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CurrentTime)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Status)
                        </th>

                        <th></th>
                    </tr>
                </thead>
                <tfoot>
                    <tr>


                        <td><strong>Total Student Count: @Model.Student2ReportList.Count()</strong></td>
                        <td>
                            <strong>Male Student Count: @Model.Student2ReportList.Count(model => model.Gender == GenderEnum.Male)</strong>

                        </td>
                        <td>
                            <strong>Female Student Count: @Model.Student2ReportList.Count(model => model.Gender == GenderEnum.Female)</strong>

                        </td>
                        <td>

                            <strong>Active Student Count: @Model.Student2ReportList.Count(model => model.Status == StatusEnum.Active)</strong>
                        </td>
                        <td>
                            <strong>Inactive Student Count: @Model.Student2ReportList.Count(model => model.Status == StatusEnum.Inactive)</strong>

                        </td>
                        <td></td>
                        <td></td>


                    </tr>
                </tfoot>
                <tbody>




                    @foreach (var item in Model.Student2ReportList)
            {
                string fullFilePath = string.Empty;
                fullFilePath = (string.IsNullOrEmpty(item.FileName)) ? "holder.js/100x100" : Url.Content(ApplicationConstant.UPLOADED_STUDENT_IMAGE_PATH + item.FileName);
                <tr>
                    <td>

                        <img src="@fullFilePath" width="100" height="100" alt="No Image" class="img-thumbnail" />

                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CourseTitle)
                    </td>
                    <td>
                        @Enum.GetName(typeof(GenderEnum), item.Gender)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CurrentDate)
                    </td>
                    <td>
                        @(item.CurrentTime.HasValue ? item.CurrentTime.Value.ToString("hh:mm tt") : string.Empty)
                    </td>
                    <td>
                        @if (item.Status == StatusEnum.Active)
                        {
                    <span class="glyphicon glyphicon-ok-sign" style="color:#3c763d" aria-hidden="true"></span>

                    <span>Active</span>

                        }
                        else if (item.Status == StatusEnum.Inactive)
                        {
                    <span class="glyphicon glyphicon-remove-sign" style="color:#a94442" aria-hidden="true"></span>
                    <span>Inactive</span>
                        }

                    </td>


                </tr>
            }

                </tbody>

            </table>
        </div>
        }

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
