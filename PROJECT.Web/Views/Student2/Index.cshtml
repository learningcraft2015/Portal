@model IEnumerable<PROJECT.Core.Model.ViewModel.Student2ViewModel>
@using PROJECT.Core.Helpers
@{
    ViewBag.Title = "Student List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Student List</h2>
<hr />
<p>
    <a style="width:130px" class="btn btn-success " href="@Url.Action("Create", "Student2")">
        <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>

        Create New
    </a>
</p>
<table class="table table-hover">
    <tr>
        <th>
            Photo
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CourseTitle)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Gender)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CurrentDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CurrentTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>

        <th></th>
    </tr>

    @foreach (var item in Model)
    {

        string fullFilePath = string.Empty;
        fullFilePath = (string.IsNullOrEmpty(item.FileName)) ? "holder.js/100x100" : Url.Content(ApplicationConstant.UPLOADED_STUDENT_IMAGE_PATH + item.FileName);
        
        
        <tr>
            <td>
                <a href="@Url.Action("Details", "Student2", new { id = item.StudentId })">
                    <img  src="@fullFilePath" width="100" height="100" alt="No Image" class="img-thumbnail" />
                </a>

            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CourseTitle)
            </td>
            <td>
                @Enum.GetName(typeof(GenderEnum), item.Gender)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CurrentDate)
            </td>
            <td>
                @(item.CurrentTime.HasValue ? item.CurrentTime.Value.ToString("hh:mm tt") : string.Empty)
            </td>
            <td>
                @if (item.Status == StatusEnum.Active)
                {
                    <span class="glyphicon glyphicon-ok-sign" style="color:#3c763d" aria-hidden="true"></span>

                    <span>Active</span>

                }
                else if (item.Status == StatusEnum.Inactive)
                {
                    <span class="glyphicon glyphicon-remove-sign" style="color:#a94442" aria-hidden="true" ></span>
                    <span>Inactive</span>
                }

            </td>

            <td>
                <a style="width:90px" class="btn btn-warning" href="@Url.Action("Edit", new { id = item.StudentId })">
                    <span class="glyphicon glyphicon-edit" aria-hidden="true"></span>

                    Edit
                </a>
                <a style="width:90px" class="btn btn-info " href="@Url.Action("Details",new { id = item.StudentId })">
                    <span class="glyphicon glyphicon-eye-open" aria-hidden="true"></span>

                    Details
                </a>

                <a style="width:90px" class="btn btn-danger " href="@Url.Action("Delete", new { id = item.StudentId })">

                    <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                    Delete
                </a>
            </td>
        </tr>
    }

</table>
